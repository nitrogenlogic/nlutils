#!/usr/bin/env ruby1.9.1
# Ultra-simple fallback firmware update script that doesn't rely on any Gems.
# Copyright (C)2012 Mike Bourgeous.  Released under AGPLv3 in 2018.

require 'cgi'
require 'tempfile'

cgi = CGI.new
file = cgi['firmware_file']
submit = cgi['submit']

puts "Content-Type: text/plain;charset=utf-8\n\n"

$stderr = $stdout

if file.respond_to?(:read) && file.respond_to?(:local_path)
	puts "Processing firmware update: #{file.original_filename.gsub(/[^[:print:][:space:]]/, '')}."
	filename = file.local_path
	result = nil
	if filename && filename.length > 0
		result = system("sudo /opt/nitrogenlogic/util/firmware_update.sh '#{filename}' 2>&1")
	else
		tmpfile = Tempfile.new('firmware')
		tmpfile.write file.read
		tmpfile.close
		result = system("sudo /opt/nitrogenlogic/util/firmware_update.sh '#{tmpfile.path}' 2>&1")
		tmpfile.unlink
	end

	puts "Firmware update #{result ? 'succeeded' : 'failed'}."
else
	puts "No firmware file given."
end
